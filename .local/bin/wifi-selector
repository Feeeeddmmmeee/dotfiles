#!/bin/bash

SCRIPT_NAME=$(basename $0)

ask_for_password()
{
	for i in {1..3}; do
		PASSWORD=$(rofi -password -dmenu -p "Enter password:" -theme applauncher)

		nmcli connection delete "$SELECTED"
		if nmcli d w c "$SELECTED" password "$PASSWORD";
		then
			break
		fi

		# Quit immediately if user didn't input anything
		if [ -z "${PASSWORD}" ];
		then
			break
		fi
	done
}

show_help()
{
	cat <<EOF
$SCRIPT_NAME â€” Interactive Wi-Fi network selector using rofi

Usage:
  $SCRIPT_NAME [OPTIONS]

Description:
  Display a list of available Wi-Fi networks using rofi and allow you to connect
  to one. By default, hidden networks are not shown.

Options:
  --show-hidden    Include hidden Wi-Fi networks in the list
  --help           Display this help message

Examples:
  $SCRIPT_NAME
      Display only visible networks

  $SCRIPT_NAME --show-hidden
      Display all networks, including hidden ones
EOF
}

SHOW_HIDDEN=false

while [[ $# -gt 0 ]]; do
	case "$1" in
		--show-hidden)
			SHOW_HIDDEN=true
			shift
			;;
		--help)
			show_help
			exit 0
			;;
		*)
			echo "Unknown option: $1"
			echo "Try '$SCRIPT_NAME --help' for more information."
			exit 1
			;;
	esac
done

nmcli d w rescan

if $SHOW_HIDDEN;
then
	NETWORKS=$(nmcli -t -f SSID,SIGNAL dev wifi | sed 's/^:/<hidden>:/')
else
	NETWORKS=$(nmcli -t -f SSID,SIGNAL dev wifi | grep -v '^:')
fi

# Removing duplicates
NETWORKS=$(echo "$NETWORKS" | awk -F: '!seen[$1]++')

# Formatting the signal value
NETWORKS=$(echo "$NETWORKS" | awk -F: '{printf "%-42s %8s\n", $1, " (" $2 "/100)"}')

SELECTED=$(echo "$NETWORKS" | rofi -dmenu -i -p "Select network:" -theme applauncher)

# Exit if user quit before selection
if [[ $? -ne 0 ]]; 
then
	exit 0
fi

# Try to connect with no/saved password
# If it doesn't work ask for password
if ! nmcli d w c "$SELECTED";
then
		ask_for_password
fi
