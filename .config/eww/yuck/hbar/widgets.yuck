(defwidget arch_icon []
  (button 
    :class "arch_icon"
    :valign "center"
    :onclick "~/.local/bin/toggle_menu"
    "󰣇"
    )
  )

(defwidget workspaces []
  (box 
    :class "workspaces-widget"
    :space-evenly true
    (label :text "${workspaces}${current_workspace}" :visible false)
    (for workspace in workspaces
         (eventbox 
           :onclick "hyprctl dispatch workspace ${workspace.id}"
           (box 
             :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
             (label :text "")
             )
           )
         )
    )
  )

(defwidget clock []
  (label :class "clock"
         :text time
         )
  )

(defwidget wifi []
  (eventbox 
    :onhover "eww update wifi_visible=true"
    :onhoverlost "eww update wifi_visible=false"
    (box
      :space-evenly false
      (label :text wifi_icon :class "wifi_icon")
      (revealer
        :transition "slideright"
        :reveal wifi_visible
        :duration "200ms"
        (button
          :class "wifi_text"
          :onclick "togglewifi"
          wifi_ssid
          )
        )
      )
    )
  )

(defwidget battery []
  (eventbox
    :onhover "eww update battery_visible=true"
    :onhoverlost "eww update battery_visible=false"
    (box
      :space-evenly false
      (label :text "${EWW_BATTERY.BAT1.status == "Discharging" ? "" : "󱐋"}${EWW_BATTERY.BAT1.capacity < 15 ? "󰁺" : EWW_BATTERY.BAT1.capacity < 25 ? "󰁻" : EWW_BATTERY.BAT1.capacity < 35 ? "󰁼" : EWW_BATTERY.BAT1.capacity < 45 ? "󰁽" : EWW_BATTERY.BAT1.capacity < 55 ? "󰁾" : EWW_BATTERY.BAT1.capacity < 65 ? "󰁿" : EWW_BATTERY.BAT1.capacity < 75 ? "󰂀" : EWW_BATTERY.BAT1.capacity < 85 ? "󰂁" : EWW_BATTERY.BAT1.capacity < 95 ? "󰂂" : "󰁹"}" :class "battery ${EWW_BATTERY.BAT1.state == "Charging" ? "charging" : EWW_BATTERY.BAT1.capacity < battery_critical_threshold ? "critical" : EWW_BATTERY.BAT1.capacity < battery_warning_threshold ? "warning" : ""}")
      (revealer
        :transition "slideright"
        :reveal battery_visible
        :duration "200ms"
        (label 
          :class "battery_text"
          :text "${EWW_BATTERY.BAT1.capacity}% (${battery_left})"
          )
        )
      )
    )
  )

(defwidget brightness []
  (eventbox 
    :onhover "eww update brightness_visible=true"
    :onhoverlost "eww update brightness_visible=false"
    (box 
      :space-evenly false
      (label :text "󰃠" :class "brightness_icon")
      (revealer 
        :transition "slideright"
        :reveal brightness_visible
        :duration "200ms"
        (scale
          :class "brightness_bar"
          :value current_brightness
          :min 0
          :max 100
          :orientation "h"
          :onchange "brightnessctl set {}%"
          :tooltip "${current_brightness}%"
          )
        )
      )
    )
  )

(defwidget volume []
  (eventbox 
    :onhover "eww update volume_visible=true"
    :onhoverlost "eww update volume_visible=false"
    (box
      :space-evenly false
      (label :text volume_icon :class "volume_icon")
      (revealer
        :transition "slideright"
        :reveal volume_visible
        :duration "200ms"
        (scale
          :class "volume_bar"
          :value current_volume
          :min 0
          :max 100
          :orientation "h"
          :onchange "pamixer --set-volume {}"
          :tooltip "${current_volume}%"
          )
        )
      )
    )
  )

(defwidget mic []
  (button 
    :class "mic_icon"
    :onclick "pamixer --source 1 --toggle-mute"
    mic_icon
    )
  )

(defwidget container []
  (box 
    :class "container"
    :space-evenly false
    :spacing 15
    (wifi)
    (battery)
    (brightness)
    (volume)
    (mic)
    )
  )

(defwidget power []
  (button 
    :class "power_icon"
    :onclick "echo placeholder command"
    ""
    )
  )
