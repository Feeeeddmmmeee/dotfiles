#!/bin/bash

DOTFILES=https://github.com/Feeeeddmmmeee/dotfiles

# Helper functions

choose_multiple()
{
	gum choose --cursor-prefix="[ ] " --selected-prefix="[x] " --unselected-prefix="[ ] " --no-limit "$@"
}

choose_one()
{
	gum choose "$@"
}

install_pkgs()
{
	for pkg in "$@"; do
		if $pkgmgr -Q "$pkg" &> /dev/null; then
			echo "[ Skipped ] $pkg is already installed..."
		else
			sudo gum spin --title="Installing $pkg..." -- $pkgmgr --noconfirm -S $pkg
			echo "=> Successfully installed $pkg..."
		fi
	done
}

install_helper()
{
	if command -v $1 &> /dev/null; then
		echo "[ Skipped ] $1 is already installed..."
		return 0
	fi

	gum spin --title="Cloning repo..." -- git clone "https://aur.archlinux.org/$1.git"
	cd $1
	gum spin --title="Building... " -- makepkg --noconfirm -si
	cd ..
	rm -rf "./$1"

	if command -v $1 &> /dev/null; then
		echo "=> Successfully installed $1"
		pkgmgr=$1
	else
		echo "[ ERROR ] Failed to install $1..."
	fi
}

# Installation

clear
pkgmgr=pacman

# Choosing an AUR helper

echo "Choose your AUR helper:"
OPTIONS=$(choose_one "Yay" "Paru" "None")
case $OPTIONS in
	Yay)
		install_helper yay ;;
	Paru)
		install_helper paru ;;
	*)
		echo "=> Continuing without an AUR helper..."
esac

# Choosing a shell

echo
echo "Choose which shell you want to use:"
OPTIONS=$(choose_one "Zsh" "Bash")
case $OPTIONS in
	Zsh)
		install_pkgs zsh ;;
	Bash)
		install_pkgs bash ;;
esac

# Installing packages

echo
echo "Choose packages (all are recommended):"
OPTIONS=$(choose_multiple --selected=* hyprland nvim kitty swww starship firefox python-pywal16 python-pywalfox imagemagick slurp grim wl-clipboard less)
install_pkgs $OPTIONS

# Syncing the configs

DEST=$HOME
echo
if (gum confirm "Do you want to use GNU Stow to manage your configs?"); then
	install_pkgs stow
	export GUM_FILE_FILE=0
	echo "Choose where you want to put the dotfiles folder:"
	CHOSEN=$(gum file --directory --all /home)
	cd ..

	if [[ "$CHOSEN" != "$(pwd)" ]]
		mv -i dotfiles/ $PATH
	fi

	echo "=> Successfully moved dotfiles to $PATH..."
	cd "$PATH/dotfiles"
	pwd
	./syncdots
else
	mv -i ./* ./.* $DEST
	cd ..
	rm -rf dotfiles/
	echo "=> Successfully moved all configs into $HOME"
fi

echo
echo "=> Successfully finished the installation..."
